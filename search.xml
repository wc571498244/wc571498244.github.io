<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Gunicorn 配置详解</title>
      <link href="/2021/05/16/gunicorn-pei-zhi-xiang-jie/"/>
      <url>/2021/05/16/gunicorn-pei-zhi-xiang-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><p><code>-c CONFIG, --config CONFIG</code><br>Gunicorn配置文件路径，路径形式的字符串格式，如：</p><pre class="line-numbers language-sh"><code class="language-sh">gunicorn -c gunicorn.conf main:app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h3><p><code>-b ADDRESS, --bind ADDRESS</code><br>Gunicorn绑定服务器套接字，Host形式的字符串格式。Gunicorn可绑定多个套接字，如：</p><pre class="line-numbers language-sh"><code class="language-sh">gunicorn -b 127.0.0.1:8000 -b [::1]:9000 manager:app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="backlog"><a href="#backlog" class="headerlink" title="backlog"></a>backlog</h3><p><code>--backlog</code><br>未决连接的最大数量，即等待服务的客户的数量。必须是正整数，一般设定在64~2048的范围内，一般设置为2048，超过这个数字将导致客户端在尝试连接时错误</p><h3 id="workers"><a href="#workers" class="headerlink" title="workers"></a>workers</h3><p><code>-w INT, --workers INT</code><br>用于处理工作进程的数量，为正整数，默认为1。worker推荐的数量为当前的CPU个数*2 + 1。计算当前的CPU个数方法：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> multiprocessing<span class="token keyword">print</span> multiprocessing<span class="token punctuation">.</span>cpu_count<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="worker-class"><a href="#worker-class" class="headerlink" title="worker_class"></a>worker_class</h3><p><code>-k STRTING, --worker-class STRTING</code><br>使用寿命工作模式，默认为sync。可使用下面的常用的工作模式:</p><ul><li>sync</li><li>eventlet: 需要下载eventlet &gt;= 0.9.7</li><li>gevent: 需要下载gevent &gt;= 0.13</li><li>tornado: 需要下载tornado &gt;= 0.2</li><li>gthread</li><li>gaiohttp：需要python 3.4和aiohttp&gt;=0.21.5</li><li>uvicorn: 需要下载uvicorn(部署fastAPI时使用, 下面举个例子)</li></ul><pre class="line-numbers language-sh"><code class="language-sh"># 举个例子(fastAPI)gunicorn example:app -w 4 -k uvicorn.workers.UvicornWorker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="threads"><a href="#threads" class="headerlink" title="threads"></a>threads</h3><p><code>--threads INT</code><br>处理请求的工作线程数，使用指定数量的线程运行每个worker。为正整数，默认为1。</p><h3 id="worker-connections"><a href="#worker-connections" class="headerlink" title="worker_connections"></a>worker_connections</h3><p><code>--worker-connections INT</code><br>最大客户端并发数量，默认情况下这个值为1000。此设置将影响gevent和eventlet工作模式</p><h3 id="max-requests"><a href="#max-requests" class="headerlink" title="max_requests"></a>max_requests</h3><p><code>--max-requests INT</code><br>重新启动之前，工作将处理的最大请求数。默认值为0。</p><h3 id="timeout"><a href="#timeout" class="headerlink" title="timeout"></a>timeout</h3><p><code>-t INT, --timeout INT</code><br>超过这么多秒后工作将被杀掉，并重新启动。一般设定为30秒</p><h3 id="keepalive"><a href="#keepalive" class="headerlink" title="keepalive"></a>keepalive</h3><p><code>--keep-alive INT</code><br>在keep-alive连接上等待请求的秒数，默认情况下值为2。一般设定在1~5秒之间。</p><h3 id="limit-request-line"><a href="#limit-request-line" class="headerlink" title="limit_request_line"></a>limit_request_line</h3><p><code>--limit-request-line INT</code><br>HTTP请求行的最大大小，此参数用于限制HTTP请求行的允许大小，默认情况下，这个值为4094。该值的范围为0~8190。此参数可以防止任何DDOS攻击</p><h3 id="limit-request-fields"><a href="#limit-request-fields" class="headerlink" title="limit_request_fields"></a>limit_request_fields</h3><p><code>--limit-request-fields INT</code><br>限制HTTP请求中请求头字段的数量。此字段用于限制请求头字段的数量以防止DDOS攻击，与limit-request-field-size一起使用可以提高安全性。默认情况下，这个值为100，这个值不能超过32768</p><h3 id="limit-request-field-size"><a href="#limit-request-field-size" class="headerlink" title="limit_request_field_size"></a>limit_request_field_size</h3><p><code>--limit-request-field-size INT</code><br>限制HTTP请求中请求头的大小，默认情况下这个值为8190。值是一个整数或者0，当该值为0时，表示将对请求头大小不做限制</p><h3 id="reload"><a href="#reload" class="headerlink" title="reload"></a>reload</h3><p><code>--reload</code><br>代码更新时将重启工作，默认为False。此设置一般用于开发，每当应用程序发生更改时，都会导致工作重新启动。</p><h3 id="reload-engine"><a href="#reload-engine" class="headerlink" title="reload_engine"></a>reload_engine</h3><p><code>--reload-engine STRTING</code><br>选择重载的引擎，支持的有三种：</p><ul><li>auto</li><li>pull</li><li>inotity：需要下载</li></ul><h3 id="check-config"><a href="#check-config" class="headerlink" title="check_config"></a>check_config</h3><p><code>--check-config</code><br>显示现在的配置，默认值为False，即显示。</p><h3 id="preload-app"><a href="#preload-app" class="headerlink" title="preload_app"></a>preload_app</h3><p><code>--preload</code><br>在工作进程被复制(派生)之前加载应用程序代码，默认为False。通过预加载应用程序，你可以节省RAM资源，并且加快服务器启动时间。</p><h3 id="chdir"><a href="#chdir" class="headerlink" title="chdir"></a>chdir</h3><p><code>--chdir</code><br>加载应用程序之前将chdir目录指定到指定目录</p><h3 id="daemon"><a href="#daemon" class="headerlink" title="daemon"></a>daemon</h3><p><code>--daemon</code><br>守护Gunicorn进程，默认False</p><h3 id="raw-env"><a href="#raw-env" class="headerlink" title="raw_env"></a>raw_env</h3><p><code>-e ENV, --env ENV</code><br>设置环境变量(key=value)，将变量传递给执行环境，如：</p><pre class="line-numbers language-sh"><code class="language-sh">gunicorin -b 127.0.0.1:8000 -e abc=123 manager:app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在配置文件中写法：</p><pre class="line-numbers language-sh"><code class="language-sh">raw_env=["abc=123"]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="pidfile"><a href="#pidfile" class="headerlink" title="pidfile"></a>pidfile</h3><p><code>-p FILE, --pid FILE</code><br>设置pid文件的文件名，如果不设置将不会创建pid文件</p><h3 id="worker-tmp-dir"><a href="#worker-tmp-dir" class="headerlink" title="worker_tmp_dir"></a>worker_tmp_dir</h3><p><code>--worker-tmp-dir DIR</code><br>设置工作临时文件目录，如果不设置会采用默认值。</p><h3 id="accesslog"><a href="#accesslog" class="headerlink" title="accesslog"></a>accesslog</h3><p><code>--access-logfile FILE</code><br>要写入的访问日志目录</p><h3 id="access-log-format"><a href="#access-log-format" class="headerlink" title="access_log_format"></a>access_log_format</h3><p><code>--access-logformat STRING</code><br>要写入的访问日志格式。如：</p><pre class="line-numbers language-sh"><code class="language-sh">access_log_format = '%(h)s %(l)s %(u)s %(t)s'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>常见格式说明：<br>|  识别码   | 说明                          |<br>|  —-     | —-                           |<br>|  h        |远程地址                        |<br>|  l        |“-“                            |<br>|  u        |用户名                            |<br>|  t        |时间                            |<br>|  r        |状态行，如：GET /test HTTP/1.1    |<br>|  m        |请求方法                        |<br>|  U        |没有查询字符串的URL            |<br>|  q        |查询字符串                        |<br>|  H        |协议                            |<br>|  s        |状态码                            |<br>|  B        |response长度                    |<br>|  b        |response长度(CLF格式)            |<br>|  f        |参考                            |<br>|  a        |用户代理                        |<br>|  T        |请求时间，单位为s                |<br>|  D        |请求时间，单位为ms                 |<br>|  p        |进程id                            |<br>|  {Header}i    | 请求头                    |<br>|  {Header}o    | 相应头                    |<br>|  {Variable}e    | 环境变量                    |</p><h3 id="errorlog"><a href="#errorlog" class="headerlink" title="errorlog"></a>errorlog</h3><p><code>--error-logfile FILE, --log-file FILE</code><br>要写入错误日志的文件目录。</p><h3 id="loglevel"><a href="#loglevel" class="headerlink" title="loglevel"></a>loglevel</h3><p><code>--log-level LEVEL</code><br>错误日志输出等级。</p><p>支持的级别名称为:</p><ul><li>debug</li><li>info</li><li>warning</li><li>error</li><li>critical</li></ul><p>更多配置：<a href="http://docs.gunicorn.org/en/stable/settings.html#server-mechanics" target="_blank" rel="noopener">http://docs.gunicorn.org/en/stable/settings.html#server-mechanics</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
